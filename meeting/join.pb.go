// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: relo/protocol/meeting/join.proto

package meeting

import (
	lesson "github.com/reloclass/core/lesson"
	meeting "github.com/reloclass/core/meeting"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建/加入会议请求参数
type JoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// userId
	// @gotags: json:"userId" validate:"required"
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"userId" validate:"required"`
	// 课时时刻编号
	// @gotags: json:"courseTimeId,string" validate:"required"
	CourseTimeId int64 `protobuf:"varint,3,opt,name=course_time_id,json=courseTimeId,proto3" json:"courseTimeId,string" validate:"required"`
}

func (x *JoinReq) Reset() {
	*x = JoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relo_protocol_meeting_join_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinReq) ProtoMessage() {}

func (x *JoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_relo_protocol_meeting_join_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinReq.ProtoReflect.Descriptor instead.
func (*JoinReq) Descriptor() ([]byte, []int) {
	return file_relo_protocol_meeting_join_proto_rawDescGZIP(), []int{0}
}

func (x *JoinReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JoinReq) GetCourseTimeId() int64 {
	if x != nil {
		return x.CourseTimeId
	}
	return 0
}

// 创建/加入会议响应参数
type JoinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 程序编号
	// @gotags: json:"appId,string"
	AppId int64 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"appId,string"`
	// 用户编号 如果是游客则返回一个虚拟的号
	// @gotags: json:"userId,string"
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"userId,string"`
	// 加入课程中 会议时用户名字
	// @gotags: json:"nickname"
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname"`
	// 课程状态
	// @gotags: json:"status"
	Status lesson.Status `protobuf:"varint,5,opt,name=status,proto3,enum=relo.core.lesson.Status" json:"status"`
	// 会议基础信息
	// @gotags: json:"meeting"
	Meeting *meeting.MeetingBaseInfo `protobuf:"bytes,6,opt,name=meeting,proto3" json:"meeting"`
	// Trtc连接信息
	// @gotags: json:"trtc"
	Trtc *meeting.TrtcMeeting `protobuf:"bytes,7,opt,name=trtc,proto3" json:"trtc"`
	// 白板信息
	// @gotags: json:"whiteboard"
	Whiteboard *meeting.Whiteboard `protobuf:"bytes,8,opt,name=whiteboard,proto3" json:"whiteboard"`
}

func (x *JoinRsp) Reset() {
	*x = JoinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relo_protocol_meeting_join_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRsp) ProtoMessage() {}

func (x *JoinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_relo_protocol_meeting_join_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRsp.ProtoReflect.Descriptor instead.
func (*JoinRsp) Descriptor() ([]byte, []int) {
	return file_relo_protocol_meeting_join_proto_rawDescGZIP(), []int{1}
}

func (x *JoinRsp) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *JoinRsp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JoinRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *JoinRsp) GetStatus() lesson.Status {
	if x != nil {
		return x.Status
	}
	return lesson.Status_CREATED
}

func (x *JoinRsp) GetMeeting() *meeting.MeetingBaseInfo {
	if x != nil {
		return x.Meeting
	}
	return nil
}

func (x *JoinRsp) GetTrtc() *meeting.TrtcMeeting {
	if x != nil {
		return x.Trtc
	}
	return nil
}

func (x *JoinRsp) GetWhiteboard() *meeting.Whiteboard {
	if x != nil {
		return x.Whiteboard
	}
	return nil
}

var File_relo_protocol_meeting_join_proto protoreflect.FileDescriptor

var file_relo_protocol_meeting_join_proto_rawDesc = []byte{
	0x0a, 0x20, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x72, 0x65, 0x6c, 0x6f, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x72, 0x65, 0x6c,
	0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x74,
	0x72, 0x74, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x72, 0x65, 0x6c, 0x6f, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a,
	0x07, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xb8, 0x02, 0x0a, 0x07, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x32, 0x0a, 0x04, 0x74, 0x72, 0x74, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x54, 0x72, 0x74, 0x63, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x74,
	0x72, 0x74, 0x63, 0x12, 0x3d, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x65, 0x6c, 0x6f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x3b, 0x6d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relo_protocol_meeting_join_proto_rawDescOnce sync.Once
	file_relo_protocol_meeting_join_proto_rawDescData = file_relo_protocol_meeting_join_proto_rawDesc
)

func file_relo_protocol_meeting_join_proto_rawDescGZIP() []byte {
	file_relo_protocol_meeting_join_proto_rawDescOnce.Do(func() {
		file_relo_protocol_meeting_join_proto_rawDescData = protoimpl.X.CompressGZIP(file_relo_protocol_meeting_join_proto_rawDescData)
	})
	return file_relo_protocol_meeting_join_proto_rawDescData
}

var file_relo_protocol_meeting_join_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_relo_protocol_meeting_join_proto_goTypes = []interface{}{
	(*JoinReq)(nil),                 // 0: relo.protocol.meeting.JoinReq
	(*JoinRsp)(nil),                 // 1: relo.protocol.meeting.JoinRsp
	(lesson.Status)(0),              // 2: relo.core.lesson.Status
	(*meeting.MeetingBaseInfo)(nil), // 3: relo.core.meeting.MeetingBaseInfo
	(*meeting.TrtcMeeting)(nil),     // 4: relo.core.meeting.TrtcMeeting
	(*meeting.Whiteboard)(nil),      // 5: relo.core.meeting.Whiteboard
}
var file_relo_protocol_meeting_join_proto_depIdxs = []int32{
	2, // 0: relo.protocol.meeting.JoinRsp.status:type_name -> relo.core.lesson.Status
	3, // 1: relo.protocol.meeting.JoinRsp.meeting:type_name -> relo.core.meeting.MeetingBaseInfo
	4, // 2: relo.protocol.meeting.JoinRsp.trtc:type_name -> relo.core.meeting.TrtcMeeting
	5, // 3: relo.protocol.meeting.JoinRsp.whiteboard:type_name -> relo.core.meeting.Whiteboard
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_relo_protocol_meeting_join_proto_init() }
func file_relo_protocol_meeting_join_proto_init() {
	if File_relo_protocol_meeting_join_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_relo_protocol_meeting_join_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_relo_protocol_meeting_join_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relo_protocol_meeting_join_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_relo_protocol_meeting_join_proto_goTypes,
		DependencyIndexes: file_relo_protocol_meeting_join_proto_depIdxs,
		MessageInfos:      file_relo_protocol_meeting_join_proto_msgTypes,
	}.Build()
	File_relo_protocol_meeting_join_proto = out.File
	file_relo_protocol_meeting_join_proto_rawDesc = nil
	file_relo_protocol_meeting_join_proto_goTypes = nil
	file_relo_protocol_meeting_join_proto_depIdxs = nil
}
