// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: relo/protocol/vo/course_schedule.proto

package vo

import (
	course "github.com/reloclass/core/course"
	courseschedule "github.com/reloclass/core/courseschedule"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加排课计划信息
type CourseSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排课计划编号
	// @gotags: json:"id,string"
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,string"`
	// 学校编号
	// @gotags: json:"schoolId,string"
	SchoolId int64 `protobuf:"varint,3,opt,name=school_id,json=schoolId,proto3" json:"schoolId,string"`
	// 课程编号
	// @gotags: json:"courseId,string"
	CourseId int64 `protobuf:"varint,4,opt,name=course_id,json=courseId,proto3" json:"courseId,string"`
	// 主讲老师
	// @gotags: json:"teacherId,string"
	TeacherId int64 `protobuf:"varint,5,opt,name=teacher_id,json=teacherId,proto3" json:"teacherId,string"`
	// 课节名称
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// 开始时间
	// @gotags: json:"startTime"
	StartTime string `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"startTime"`
	// 授课时长 单位：分钟
	// @gotags: json:"duration"
	Duration int32 `protobuf:"varint,8,opt,name=duration,proto3" json:"duration"`
	// 结束时间
	// @gotags: json:"endTime"
	EndTime string `protobuf:"bytes,9,opt,name=end_time,json=endTime,proto3" json:"endTime"`
	// 重复类型
	// @gotags: json:"repeatType"
	RepeatType courseschedule.RepeatType `protobuf:"varint,10,opt,name=repeat_type,json=repeatType,proto3,enum=relo.core.courseschedule.RepeatType" json:"repeatType"`
	// 子类型
	// @gotags: json:"subRepeatType"
	SubRepeatType courseschedule.SubRepeatType `protobuf:"varint,11,opt,name=sub_repeat_type,json=subRepeatType,proto3,enum=relo.core.courseschedule.SubRepeatType" json:"subRepeatType"`
	// 重复次数
	// @gotags: json:"repeatTimes"
	RepeatTimes int32 `protobuf:"varint,12,opt,name=repeat_times,json=repeatTimes,proto3" json:"repeatTimes"`
	// 重复间隔
	// @gotags: json:"repeatInterval"
	RepeatInterval int32 `protobuf:"varint,13,opt,name=repeat_interval,json=repeatInterval,proto3" json:"repeatInterval"`
	// 重复值
	// @gotags: json:"repeatValues"
	RepeatValues []*courseschedule.RepeatValue `protobuf:"bytes,14,rep,name=repeat_values,json=repeatValues,proto3" json:"repeatValues"`
	// 上课模式
	// @gotags: json:"classMode"
	ClassMode course.ClassMode `protobuf:"varint,15,opt,name=class_mode,json=classMode,proto3,enum=relo.core.course.ClassMode" json:"classMode"`
	// 允许类型
	// @gotags: json:"allowedType"
	AllowedType courseschedule.AllowedType `protobuf:"varint,16,opt,name=allowed_type,json=allowedType,proto3,enum=relo.core.courseschedule.AllowedType" json:"allowedType"`
	// 验证码
	Captcha string `protobuf:"bytes,18,opt,name=captcha,proto3" json:"captcha,omitempty"`
	// 录制操作类型
	// @gotags: json:"recordType"
	RecordType courseschedule.RecordType `protobuf:"varint,19,opt,name=record_type,json=recordType,proto3,enum=relo.core.courseschedule.RecordType" json:"recordType"`
	// 是否允许直播
	// @gotags: json:"liveAllowedType"
	LiveAllowedType courseschedule.LiveAllowedType `protobuf:"varint,20,opt,name=live_allowed_type,json=liveAllowedType,proto3,enum=relo.core.courseschedule.LiveAllowedType" json:"liveAllowedType"`
	// 视频质量
	// @gotags: json:"videoDimension"
	VideoDimensionType courseschedule.VideoDimensionType `protobuf:"varint,21,opt,name=video_dimension_type,json=videoDimensionType,proto3,enum=relo.core.courseschedule.VideoDimensionType" json:"videoDimension"`
	// 上台人数
	// @gotags: json:"stageNumber" validate:"required,min=1,max=12"
	StateNumber int32 `protobuf:"varint,22,opt,name=state_number,json=stateNumber,proto3" json:"stageNumber" validate:"required,min=1,max=12"`
	// 创建时间
	// @gotags: json:"createdAt"
	CreatedAt string `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"createdAt"`
	// 修改时间
	// @gotags: json:"updatedAt"
	UpdatedAt string `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt"`
	// 课程
	Course *Course `protobuf:"bytes,25,opt,name=course,proto3" json:"course,omitempty"`
	// 主讲老师
	Teacher *SchoolUser `protobuf:"bytes,26,opt,name=teacher,proto3" json:"teacher,omitempty"`
	// 学员
	Students []*SchoolUser `protobuf:"bytes,27,rep,name=students,proto3" json:"students,omitempty"`
	// 课程计划关联的资源
	Materials []*TeachingMaterial `protobuf:"bytes,28,rep,name=materials,proto3" json:"materials,omitempty"`
}

func (x *CourseSchedule) Reset() {
	*x = CourseSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_relo_protocol_vo_course_schedule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseSchedule) ProtoMessage() {}

func (x *CourseSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_relo_protocol_vo_course_schedule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseSchedule.ProtoReflect.Descriptor instead.
func (*CourseSchedule) Descriptor() ([]byte, []int) {
	return file_relo_protocol_vo_course_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *CourseSchedule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseSchedule) GetSchoolId() int64 {
	if x != nil {
		return x.SchoolId
	}
	return 0
}

func (x *CourseSchedule) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CourseSchedule) GetTeacherId() int64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

func (x *CourseSchedule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseSchedule) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CourseSchedule) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CourseSchedule) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CourseSchedule) GetRepeatType() courseschedule.RepeatType {
	if x != nil {
		return x.RepeatType
	}
	return courseschedule.RepeatType_NONE
}

func (x *CourseSchedule) GetSubRepeatType() courseschedule.SubRepeatType {
	if x != nil {
		return x.SubRepeatType
	}
	return courseschedule.SubRepeatType_SUB_REPEAT_TYPE_UNSPECIFIED
}

func (x *CourseSchedule) GetRepeatTimes() int32 {
	if x != nil {
		return x.RepeatTimes
	}
	return 0
}

func (x *CourseSchedule) GetRepeatInterval() int32 {
	if x != nil {
		return x.RepeatInterval
	}
	return 0
}

func (x *CourseSchedule) GetRepeatValues() []*courseschedule.RepeatValue {
	if x != nil {
		return x.RepeatValues
	}
	return nil
}

func (x *CourseSchedule) GetClassMode() course.ClassMode {
	if x != nil {
		return x.ClassMode
	}
	return course.ClassMode_CLASS_MODE_UNSPECIFIED
}

func (x *CourseSchedule) GetAllowedType() courseschedule.AllowedType {
	if x != nil {
		return x.AllowedType
	}
	return courseschedule.AllowedType_ALLOWED_TYPE_UNSPECIFIED
}

func (x *CourseSchedule) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

func (x *CourseSchedule) GetRecordType() courseschedule.RecordType {
	if x != nil {
		return x.RecordType
	}
	return courseschedule.RecordType_RECORD_TYPE_UNSPECIFIED
}

func (x *CourseSchedule) GetLiveAllowedType() courseschedule.LiveAllowedType {
	if x != nil {
		return x.LiveAllowedType
	}
	return courseschedule.LiveAllowedType_LIVE_ALLOWED_TYPE_UNSPECIFIED
}

func (x *CourseSchedule) GetVideoDimensionType() courseschedule.VideoDimensionType {
	if x != nil {
		return x.VideoDimensionType
	}
	return courseschedule.VideoDimensionType_VIDEO_DIMENSION_TYPE_UNSPECIFIED
}

func (x *CourseSchedule) GetStateNumber() int32 {
	if x != nil {
		return x.StateNumber
	}
	return 0
}

func (x *CourseSchedule) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CourseSchedule) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CourseSchedule) GetCourse() *Course {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *CourseSchedule) GetTeacher() *SchoolUser {
	if x != nil {
		return x.Teacher
	}
	return nil
}

func (x *CourseSchedule) GetStudents() []*SchoolUser {
	if x != nil {
		return x.Students
	}
	return nil
}

func (x *CourseSchedule) GetMaterials() []*TeachingMaterial {
	if x != nil {
		return x.Materials
	}
	return nil
}

var File_relo_protocol_vo_course_schedule_proto protoreflect.FileDescriptor

var file_relo_protocol_vo_course_schedule_proto_rawDesc = []byte{
	0x0a, 0x26, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x76, 0x6f, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x1a, 0x2a, 0x72, 0x65, 0x6c, 0x6f,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76,
	0x6f, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x72, 0x65, 0x6c, 0x6f, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x72, 0x65, 0x6c,
	0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x76, 0x6f, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x72, 0x65, 0x6c, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76,
	0x6f, 0x2f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x09, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x4f, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x6c, 0x6f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x4a, 0x0a,
	0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x65,
	0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x55, 0x0a, 0x11, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x72, 0x65,
	0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65,
	0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x2e, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x1b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x09,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x25,
	0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x6c,
	0x6f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x76, 0x6f, 0x3b, 0x76, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relo_protocol_vo_course_schedule_proto_rawDescOnce sync.Once
	file_relo_protocol_vo_course_schedule_proto_rawDescData = file_relo_protocol_vo_course_schedule_proto_rawDesc
)

func file_relo_protocol_vo_course_schedule_proto_rawDescGZIP() []byte {
	file_relo_protocol_vo_course_schedule_proto_rawDescOnce.Do(func() {
		file_relo_protocol_vo_course_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(file_relo_protocol_vo_course_schedule_proto_rawDescData)
	})
	return file_relo_protocol_vo_course_schedule_proto_rawDescData
}

var file_relo_protocol_vo_course_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_relo_protocol_vo_course_schedule_proto_goTypes = []interface{}{
	(*CourseSchedule)(nil),                 // 0: relo.protocol.vo.CourseSchedule
	(courseschedule.RepeatType)(0),         // 1: relo.core.courseschedule.RepeatType
	(courseschedule.SubRepeatType)(0),      // 2: relo.core.courseschedule.SubRepeatType
	(*courseschedule.RepeatValue)(nil),     // 3: relo.core.courseschedule.RepeatValue
	(course.ClassMode)(0),                  // 4: relo.core.course.ClassMode
	(courseschedule.AllowedType)(0),        // 5: relo.core.courseschedule.AllowedType
	(courseschedule.RecordType)(0),         // 6: relo.core.courseschedule.RecordType
	(courseschedule.LiveAllowedType)(0),    // 7: relo.core.courseschedule.LiveAllowedType
	(courseschedule.VideoDimensionType)(0), // 8: relo.core.courseschedule.VideoDimensionType
	(*Course)(nil),                         // 9: relo.protocol.vo.Course
	(*SchoolUser)(nil),                     // 10: relo.protocol.vo.SchoolUser
	(*TeachingMaterial)(nil),               // 11: relo.protocol.vo.TeachingMaterial
}
var file_relo_protocol_vo_course_schedule_proto_depIdxs = []int32{
	1,  // 0: relo.protocol.vo.CourseSchedule.repeat_type:type_name -> relo.core.courseschedule.RepeatType
	2,  // 1: relo.protocol.vo.CourseSchedule.sub_repeat_type:type_name -> relo.core.courseschedule.SubRepeatType
	3,  // 2: relo.protocol.vo.CourseSchedule.repeat_values:type_name -> relo.core.courseschedule.RepeatValue
	4,  // 3: relo.protocol.vo.CourseSchedule.class_mode:type_name -> relo.core.course.ClassMode
	5,  // 4: relo.protocol.vo.CourseSchedule.allowed_type:type_name -> relo.core.courseschedule.AllowedType
	6,  // 5: relo.protocol.vo.CourseSchedule.record_type:type_name -> relo.core.courseschedule.RecordType
	7,  // 6: relo.protocol.vo.CourseSchedule.live_allowed_type:type_name -> relo.core.courseschedule.LiveAllowedType
	8,  // 7: relo.protocol.vo.CourseSchedule.video_dimension_type:type_name -> relo.core.courseschedule.VideoDimensionType
	9,  // 8: relo.protocol.vo.CourseSchedule.course:type_name -> relo.protocol.vo.Course
	10, // 9: relo.protocol.vo.CourseSchedule.teacher:type_name -> relo.protocol.vo.SchoolUser
	10, // 10: relo.protocol.vo.CourseSchedule.students:type_name -> relo.protocol.vo.SchoolUser
	11, // 11: relo.protocol.vo.CourseSchedule.materials:type_name -> relo.protocol.vo.TeachingMaterial
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_relo_protocol_vo_course_schedule_proto_init() }
func file_relo_protocol_vo_course_schedule_proto_init() {
	if File_relo_protocol_vo_course_schedule_proto != nil {
		return
	}
	file_relo_protocol_vo_teaching_material_proto_init()
	file_relo_protocol_vo_course_proto_init()
	file_relo_protocol_vo_school_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_relo_protocol_vo_course_schedule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relo_protocol_vo_course_schedule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_relo_protocol_vo_course_schedule_proto_goTypes,
		DependencyIndexes: file_relo_protocol_vo_course_schedule_proto_depIdxs,
		MessageInfos:      file_relo_protocol_vo_course_schedule_proto_msgTypes,
	}.Build()
	File_relo_protocol_vo_course_schedule_proto = out.File
	file_relo_protocol_vo_course_schedule_proto_rawDesc = nil
	file_relo_protocol_vo_course_schedule_proto_goTypes = nil
	file_relo_protocol_vo_course_schedule_proto_depIdxs = nil
}
